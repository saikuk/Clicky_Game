{"ast":null,"code":"import _toConsumableArray from \"/Users/salkuk/Desktop/clicky_game/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/salkuk/Desktop/clicky_game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/salkuk/Desktop/clicky_game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/salkuk/Desktop/clicky_game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/salkuk/Desktop/clicky_game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/salkuk/Desktop/clicky_game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/salkuk/Desktop/clicky_game/src/App.js\";\nimport React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Navbar from \"./components/Navbar\";\nimport Wrapper from \"./components/Wrapper\";\nimport origCards from \"./cards.json\";\n\nfunction shuffleArray(array) {\n  var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleClick = function (id) {\n      var shuffledCards = shuffleArray(_toConsumableArray(_this.state.cards));\n      var chosenCard = shuffledCards.find(function (element) {\n        return element.id === id;\n      });\n\n      if (!chosenCard.clicked) {\n        chosenCard.clicked = true;\n        var newcurrentScore = _this.state.currentScore + 1;\n        var newTopScore = newcurrentScore > _this.state.topScore ? newcurrentScore : _this.state.topScore;\n\n        _this.setState({\n          cards: shuffledCards,\n          currentScore: newcurrentScore,\n          topScore: newTopScore,\n          oops: \"\"\n        });\n      } else {\n        shuffledCards.forEach(function (card) {\n          card.clicked = false;\n        });\n\n        _this.setState({\n          cards: shuffledCards,\n          currentScore: 0,\n          oops: \"Oops! Try again.\"\n        });\n      }\n    };\n\n    _this.state = {\n      cards: origCards,\n      topScore: 0,\n      currentScore: 0,\n      oops: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        title: \"Clicky Game\",\n        currentScore: this.state.currentScore,\n        topScore: this.state.topScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Wrapper, {\n        className: \"card-columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.state.cards.map(function (element) {\n        return React.createElement(Card, Object.assign({}, element, {\n          key: element.id,\n          handleClick: _this2.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }));\n      })), React.createElement(\"footer\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Click on each box only once!\", React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.state.oops)));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/salkuk/Desktop/clicky_game/src/App.js"],"names":["React","Component","Card","Navbar","Wrapper","origCards","shuffleArray","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","App","props","handleClick","id","shuffledCards","state","cards","chosenCard","find","element","clicked","newcurrentScore","currentScore","newTopScore","topScore","setState","oops","forEach","card","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Navbar from \"./components/Navbar\";\nimport Wrapper from \"./components/Wrapper\";\nimport origCards from \"./cards.json\";\n\nfunction shuffleArray(array) {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: origCards,\n      topScore: 0,\n      currentScore: 0,\n      oops: \"\"\n    };\n  }\n\n  handleClick = id => {\n\n    let shuffledCards = shuffleArray([...this.state.cards]);\n    let chosenCard = shuffledCards.find(element => element.id === id);\n\n    if (!chosenCard.clicked) {\n      chosenCard.clicked = true;\n      let newcurrentScore = this.state.currentScore + 1;\n      let newTopScore =\n        newcurrentScore > this.state.topScore ? newcurrentScore : this.state.topScore;\n      this.setState({\n        cards: shuffledCards,\n        currentScore: newcurrentScore,\n        topScore: newTopScore,\n        oops: \"\"\n      });\n    } else {\n    \n      shuffledCards.forEach(card => {\n        card.clicked = false;\n      });\n      this.setState({\n        cards: shuffledCards,\n        currentScore: 0,\n        oops: \"Oops! Try again.\"\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Navbar\n          title=\"Clicky Game\"\n          currentScore={this.state.currentScore}\n          topScore={this.state.topScore}\n        />\n        <Wrapper className=\"card-columns\">\n          {this.state.cards.map(element => {\n            return (\n              <Card\n                {...element}\n                key={element.id}\n                handleClick={this.handleClick}\n              />\n            );\n          })}\n        </Wrapper>\n        <footer className=\"text-center\">\n          Click on each box only once!\n          <h3>{this.state.oops}</h3>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}